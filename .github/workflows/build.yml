name: Python build

on:
  push:
    branches: [master, dev]
  pull_request:
    branches: ['**' ]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      AF_VER: 3.7.2

    steps:
      # Checkout repo
      - uses: actions/checkout@v2
       #array fire
      # https://arrayfire.s3.amazonaws.com/3.7.2/ArrayFire-v3.7.2_Linux_x86_64.sh

      - name: Cache ArrayFire
        uses: actions/cache@v2
        id: arrayfire
        with:
            path: afbin
            key: ${{ runner.os }}-af-${{ env.AF_VER }}

      - name: Download ArrayFire
        # Only download and cache arrayfire if already not found
        if: steps.arrayfire.outputs.cache-hit != 'true'
        run: |
            wget --quiet http://arrayfire.s3.amazonaws.com/${AF_VER}/ArrayFire-v${AF_VER}_Linux_x86_64.sh
            chmod +x ./ArrayFire-v${AF_VER}_Linux_x86_64.sh
            mkdir afbin
            ./ArrayFire-v${AF_VER}_Linux_x86_64.sh --skip-license --exclude-subdir --prefix=./afbin
            rm ./afbin/lib64/libcu*.so*
            rm ./afbin/lib64/libafcuda*.so*
            rm ./ArrayFire-v${AF_VER}_Linux_x86_64.sh


      #miniconda install
      - uses: goanpeca/setup-miniconda@v1
        with:
          activate-environment: foo
          python-version: 3.8
          channels: conda-forge
      - shell: bash -l {0}
        run: |
          conda activate foo
          conda info
          conda list 

      # Dependencies
      - name: Install dependencies
        uses: goanpeca/setup-miniconda@v1
      - shell: bash -l {0}
        run: |
          conda activate foo
          conda info
          which python3
          python3 --version
          sudo apt-get install -y python3-setuptools
          conda install pybind11
          pip install gcovr

          conda info
          conda list
          

      # Test
      - name: Test with setup
        uses: goanpeca/setup-miniconda@v1
      - shell: bash -l {0}
        run: | 
          conda activate foo
          conda info
          which python3
          python3 --version

          export AF_PATH=${GITHUB_WORKSPACE}/afbin
          echo ${AF_PATH}/arrayfire/lib64 > /etc/ld.so.conf.d/arrayfire.conf
          sudo ldconfig

        
          python3 setup.py test 
          bash script/coverage.sh

      # Sonar Cloud
      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}